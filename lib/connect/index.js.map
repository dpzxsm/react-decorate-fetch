{"version":3,"sources":["../../src/connect/index.js"],"names":["mapRequestToProps","defaults","options","mapRequest","Object","assign","withRef","WrappedComponent","ConnectComponent","props","context","mappings","lazyRequest","requests","responses","keys","forEach","key","Function","prototype","isPrototypeOf","params","childMappings","childRequests","map","request","initialResponsesState","finalResponses","Promise","all","item","promise","then","response","results","setState","pre","error","FetchError","length","value","status","loading","push","newResponses","state","refactorMapRequestToState","prevProps","newState","nextProps","_timers","refreshInterval","Number","isInteger","setInterval","timer","clearInterval","ref","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport hoistStatics from 'hoist-non-react-statics';\nimport { FetchError, omitChildren } from '../utils/helper';\nimport isPlainObject from \"../utils/isPlainObject\";\nimport shallowEqual from \"../utils/shallowEqual\";\nimport { mapRequestByOptions } from \"../utils/mapRequest\";\n\nexport default function (mapRequestToProps, defaults, options) {\n  mapRequestToProps = mapRequestToProps || (() => ({}));\n  if (isPlainObject(mapRequestToProps)) {\n    let mapRequest = Object.assign({}, mapRequestToProps);\n    mapRequestToProps = () => mapRequest;\n  }\n  options = Object.assign({ withRef: false }, options);\n  return function (WrappedComponent) {\n    class ConnectComponent extends Component {\n      constructor(props, context) {\n        super(props, context);\n        // 初始化request\n        this.state = this.refactorMapRequestToState(mapRequestToProps(omitChildren(props)));\n      }\n\n      refactorMapRequestToState = (mappings) => {\n        let lazyRequest = [];\n        let requests = {};\n        let responses = {};\n        Object.keys(mappings).forEach((key) => {\n          let options = mappings[key];\n          if (Function.prototype.isPrototypeOf(options)) {\n            requests[key] = (params) => {\n              let childMappings = options(params);\n              let childRequests = Object.keys(childMappings).map(key => {\n                let request = mapRequestByOptions(childMappings[key], defaults);\n                return ({\n                  key,\n                  request\n                });\n              });\n              this.initialResponsesState(childRequests);\n              let finalResponses = {};\n              return Promise.all(childRequests.map(item => {\n                return item.request().promise.then(response => {\n                  finalResponses[item.key] = response;\n                  return response;\n                });\n              })).then((results) => {\n                this.setState((pre) => ({\n                  responses: {\n                    ...pre.responses, ...finalResponses\n                  }\n                }));\n                results.forEach((item) => {\n                  if (item.error) {\n                    throw new FetchError(item);\n                  }\n                });\n                if (results.length > 1) {\n                  return results.map(item => item.value);\n                } else if (results.length === 1) {\n                  return results[0].value;\n                } else {\n                  return null;\n                }\n              });\n            };\n          } else {\n            responses[key] = {\n              status: 'pending',\n              loading: false\n            };\n            lazyRequest.push({\n              key,\n              options,\n              request: mapRequestByOptions(options, defaults)\n            });\n          }\n        });\n        return {\n          lazyRequest,\n          requests,\n          responses\n        };\n      };\n\n      initialResponsesState = (requests = []) => {\n        if (requests.length === 0) return;\n        this.setState((pre) => {\n          let newResponses = {};\n          requests.forEach((item) => {\n            if (item.key) {\n              newResponses[item.key] = {\n                status: 'loading',\n                loading: true\n              };\n            }\n          });\n          return {\n            responses: {\n              ...pre.responses, ...newResponses\n            }\n          };\n        });\n      };\n\n      componentDidUpdate(prevProps) {\n        if (!shallowEqual(prevProps, this.props)) {\n          // 因为props发生了变化，所以更新requests\n          let newState = this.refactorMapRequestToState(mapRequestToProps(omitChildren(nextProps)));\n          this.setState({\n            requests: newState.requests\n          });\n        }\n      }\n\n      componentDidMount() {\n        let { lazyRequest, responses } = this.state;\n        // 没有懒加载的话，就返回，防止不必要的渲染\n        if (lazyRequest.length === 0) return;\n        let finalResponses = Object.assign({}, responses);\n        // 设置成功和失败\n        Promise.all(lazyRequest.map(item => {\n          return item.request().promise.then((response) => {\n            finalResponses[item.key] = response;\n          }).catch((error) => {\n            finalResponses[item.key] = error;\n          });\n        })).then(() => {\n          this.setState({\n            responses: finalResponses\n          });\n        }).catch(() => {\n          this.setState({\n            responses: finalResponses\n          });\n        });\n\n        this._timers = lazyRequest.map(item => {\n          let refreshInterval = item.options.refreshInterval || 0;\n          if (refreshInterval && Number.isInteger(refreshInterval)) {\n            return setInterval(() => {\n              this.initialResponsesState([item]);\n              item.request().promise.then(response => {\n                this.setState(pre => {\n                  return {\n                    responses: {\n                      ...pre.responses,\n                      [item.key]: response\n                    }\n                  };\n                });\n              });\n            }, refreshInterval);\n          } else {\n            return null;\n          }\n        });\n      }\n\n      componentWillUnmount() {\n        this._timers && this._timers.forEach(timer => clearInterval(timer));\n      }\n\n      render() {\n        const ref = options.withRef ? 'wrappedInstance' : null;\n        return <WrappedComponent\n          {...this.state.responses}\n          {...this.state.requests}\n          {...this.props}\n          ref={ref}\n        />;\n      }\n    }\n\n    return hoistStatics(ConnectComponent, WrappedComponent);\n  };\n}\n"],"file":"index.js"}
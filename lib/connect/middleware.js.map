{"version":3,"sources":["../../src/connect/middleware.js"],"names":["applyMiddleware","removeMiddleware","compose","middlewares","plugin","Object","keys","forEach","key","Error","push","index","indexOf","splice","defaultNext","context","next","action","dispatch","i","Promise","reject","fn","undefined","length","resolve","bind","err"],"mappings":";;;;;QAKgBA,e,GAAAA,e;QAUAC,gB,GAAAA,gB;QAYAC,O,GAAAA,O;AA3BhB,IAAMC,cAAc,EAApB;;AAEA;;;AAGO,SAASH,eAAT,CAAyBI,MAAzB,EAAiC;AACtC;AACAC,SAAOC,IAAP,CAAYF,MAAZ,EAAoBG,OAApB,CAA4B,UAACC,GAAD,EAAS;AACnC,QAAI,OAAOJ,OAAOI,GAAP,CAAP,KAAuB,UAA3B,EAAuC;AACrC,YAAM,IAAIC,KAAJ,CAAU,2CAAV,CAAN;AACD;AACF,GAJD;AAKAN,cAAYO,IAAZ,CAAiBN,MAAjB;AACD;;AAEM,SAASH,gBAAT,CAA0BG,MAA1B,EAAkC;AACvC,MAAIO,QAAQR,YAAYS,OAAZ,CAAoBR,MAApB,CAAZ;AACA,MAAIO,UAAU,CAAC,CAAf,EAAkB;AAChBR,gBAAYU,MAAZ,CAAmBF,KAAnB,EAA0B,CAA1B;AACD;AACF;;AAED,IAAMG,cAAc,SAAdA,WAAc,CAAUC,OAAV,EAAmBC,IAAnB,EAAyB;AAC3C;AACAA;AACD,CAHD;;AAKO,SAASd,OAAT,CAAiBe,MAAjB,EAAyB;AAC9B,SAAO,UAAUF,OAAV,EAAmBC,IAAnB,EAAyB;AAC9B;AACA,QAAIL,QAAQ,CAAC,CAAb;AACA,WAAOO,SAAS,CAAT,CAAP;;AAEA,aAASA,QAAT,CAAkBC,CAAlB,EAAqB;AACnB,UAAIA,KAAKR,KAAT,EAAgB,OAAOS,QAAQC,MAAR,CAAe,IAAIZ,KAAJ,CAAU,8BAAV,CAAf,CAAP;AAChBE,cAAQQ,CAAR;AACA,UAAIG,KAAKnB,YAAYgB,CAAZ,IAAkBhB,YAAYgB,CAAZ,EAAeF,MAAf,KAA0BH,WAA5C,GAA2DS,SAApE;AACA,UAAIJ,MAAMhB,YAAYqB,MAAtB,EAA8BF,KAAKN,IAAL;AAC9B,UAAI,CAACM,EAAL,EAAS,OAAOF,QAAQK,OAAR,EAAP;AACT,UAAI;AACF,eAAOL,QAAQK,OAAR,CAAgBH,GAAGP,OAAH,EAAYG,SAASQ,IAAT,CAAc,IAAd,EAAoBP,IAAI,CAAxB,CAAZ,CAAhB,CAAP;AACD,OAFD,CAEE,OAAOQ,GAAP,EAAY;AACZ,eAAOP,QAAQC,MAAR,CAAeM,GAAf,CAAP;AACD;AACF;AACF,GAjBD;AAkBD;;kBAEcxB,W","file":"middleware.js","sourcesContent":["const middlewares = [];\n\n/**\n * 添加中间件\n */\nexport function applyMiddleware(plugin) {\n  // check middlewares\n  Object.keys(plugin).forEach((key) => {\n    if (typeof plugin[key] !== \"function\") {\n      throw new Error(\"The Middleware's action must be function!\");\n    }\n  });\n  middlewares.push(plugin);\n}\n\nexport function removeMiddleware(plugin) {\n  let index = middlewares.indexOf(plugin);\n  if (index !== -1) {\n    middlewares.splice(index, 1);\n  }\n}\n\nconst defaultNext = function (context, next) {\n  // do nothing\n  next();\n};\n\nexport function compose(action) {\n  return function (context, next) {\n    // last called middleware #\n    let index = -1;\n    return dispatch(0);\n\n    function dispatch(i) {\n      if (i <= index) return Promise.reject(new Error('next() called multiple times'));\n      index = i;\n      let fn = middlewares[i] ? (middlewares[i][action] || defaultNext) : undefined;\n      if (i === middlewares.length) fn = next;\n      if (!fn) return Promise.resolve();\n      try {\n        return Promise.resolve(fn(context, dispatch.bind(null, i + 1)));\n      } catch (err) {\n        return Promise.reject(err);\n      }\n    }\n  };\n}\n\nexport default middlewares;"]}
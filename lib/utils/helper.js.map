{"version":3,"sources":["../../src/utils/helper.js"],"names":["defaults","fetchOptions","method","headers","delay","successText","buildResponse","res","json","then","dataOrError","ok","transformPostParams","params","JSON","stringify","fetch","getTopFetch","fetchInitKeys","omitChildren","obj","children","rest","buildQuery","esc","encodeURIComponent","Object","keys","map","k","Array","isArray","key","items","item","join","filterOptions","options","reduce","data","indexOf","topFetch","window","bind","global","self","buildFetch","url","finalOptions","host","globalParams","match","assign","query","body","initConfig","Function","prototype","isPrototypeOf","console","log","FetchError","error","message","code"],"mappings":"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","sourcesContent":["const defaults = {\n  fetchOptions: {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    delay: 0,\n    successText: 'Success',\n  },\n  buildResponse: function (res) {\n    if (res && res.json) {\n      return res.json().then((dataOrError) => {\n        if (res.ok) {\n          return dataOrError;\n        } else {\n          throw dataOrError;\n        }\n      });\n    } else {\n      return {};\n    }\n  },\n  transformPostParams: function (params) {\n    return JSON.stringify(params);\n  },\n  fetch: getTopFetch()\n};\n\nconst fetchInitKeys = ['method', 'headers', 'body', 'mode', 'credentials', 'cache', 'redirect', 'referrer', 'referrerPolicy', 'integrity'];\n\nfunction omitChildren(obj) {\n  const { children, ...rest } = obj;\n  return rest;\n}\n\nfunction buildQuery(params) {\n  let esc = encodeURIComponent;\n  return Object.keys(params)\n    .map(k => {\n      if (Array.isArray(params[k])) {\n        let key = k;\n        let items = params[k].map(item => {\n          return esc(key + '[]') + '=' + esc(item);\n        });\n        return items.join('&');\n      } else {\n        return esc(k) + '=' + esc(params[k]);\n      }\n    })\n    .join('&');\n}\n\nfunction filterOptions(options) {\n  return Object.keys(options).reduce((data, key) => {\n    if (fetchInitKeys.indexOf(key) !== -1) {\n      data[key] = options[key];\n    }\n    return data;\n  }, {});\n}\n\nfunction getTopFetch() {\n  let topFetch;\n  if (typeof window !== 'undefined') {\n    if (window.fetch) {\n      topFetch = window.fetch.bind(window);\n    }\n  } else if (typeof global !== 'undefined') {\n    if (global.fetch) {\n      topFetch = global.fetch.bind(global);\n    }\n  } else if (typeof self !== 'undefined') {\n    if (self.fetch) {\n      topFetch = self.fetch.bind(self);\n    }\n  }\n  return topFetch;\n}\n\nfunction buildFetch(url, options = {}) {\n  let { params = {}, ...finalOptions } = options;\n  finalOptions = filterOptions(finalOptions);\n  // filter host and globalParam\n  let { host, globalParams = {}, ...fetchOptions } = defaults.fetchOptions;\n  if (!url.match(/https?:\\/\\//) && host) {\n    url = host + url;\n  }\n  // header is special merge\n  finalOptions.headers = Object.assign({}, fetchOptions.headers, finalOptions.headers || {});\n  // merge options\n  finalOptions = Object.assign(fetchOptions, finalOptions);\n\n  params = Object.assign({}, globalParams, params);\n  if (finalOptions.method === 'GET') {\n    let query = buildQuery(params);\n    if (query) {\n      if (url.match(/https?:\\/\\/.*\\?/)) {\n        url = url + '&' + buildQuery(params);\n      } else {\n        url = url + '?' + buildQuery(params);\n      }\n    }\n  } else if (finalOptions.method === 'POST' && !finalOptions.body) {\n    let transformPostParams = defaults.transformPostParams;\n    finalOptions.body = transformPostParams(params, finalOptions);\n  }\n  let topFetch = defaults.fetch || getTopFetch();\n  return topFetch(url, finalOptions).then((res) => {\n    return defaults.buildResponse(res);\n  });\n}\n\nfunction initConfig({ fetchOptions = {}, buildResponse, transformPostParams, fetch }) {\n  if (typeof fetchOptions === 'object') {\n    defaults.fetchOptions = Object.assign(defaults.fetchOptions, fetchOptions);\n  }\n  if (Function.prototype.isPrototypeOf(buildResponse)) {\n    defaults.buildResponse = buildResponse;\n  }\n  if (Function.prototype.isPrototypeOf(transformPostParams)) {\n    defaults.transformPostParams = transformPostParams;\n  }\n  if (fetch) {\n    console.log('global fetch api is change');\n    defaults.fetch = fetch;\n  }\n}\n\nclass FetchError {\n  constructor(error) {\n    if (typeof error === 'string') {\n      this.message = error;\n      this.code = 0;\n    } else {\n      this.message = error.message;\n      this.code = error.code || 0;\n    }\n  }\n\n  toString() {\n    return this.message;\n  }\n}\n\nexport {\n  defaults,\n  FetchError,\n  omitChildren,\n  buildFetch,\n  initConfig\n};\n"],"file":"helper.js"}
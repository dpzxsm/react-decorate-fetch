{"version":3,"sources":["../../src/utils/mapRequest.js"],"names":["makeRequest","options","url","value","then","andThen","successText","otherOptions","Promise","resolve","request","Function","prototype","isPrototypeOf","reject","result","thenOptions","mapRequestByOptions","data","status","loading","error","success","code","message","toString","defaults","method","Array","isArray","all","map","item"],"mappings":"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","sourcesContent":["import { compose } from \"./middleware.js\";\nimport { buildFetch } from \"./helper.js\";\nimport isPlainObject from \"./isPlainObject.js\";\n\nfunction makeRequest(options = {}) {\n  return function () {\n    let { url, value, then, andThen, successText, ...otherOptions } = options;\n    return new Promise((resolve) => {\n      compose('before')([options], () => {\n        let request;\n        if (value && !Function.prototype.isPrototypeOf(value)) {\n          request = Promise.resolve(value);\n        } else if (url) {\n          request = buildFetch(url, otherOptions);\n        } else {\n          request = Promise.reject('Must have url or value !');\n        }\n        request.then((result) => {\n          if (then) {\n            let thenOptions = then(result);\n            if (thenOptions) {\n              return mapRequestByOptions(thenOptions)();\n            }\n          }\n          let data = result;\n          if (Function.prototype.isPrototypeOf(value)) {\n            data = value(data);\n          }\n          return {\n            status: 'success',\n            loading: false,\n            error: false,\n            success: true,\n            code: 200,\n            message: successText || 'Success',\n            value: data\n          };\n        }).catch((error) => {\n          return {\n            status: 'error',\n            loading: false,\n            error: true,\n            success: false,\n            code: error.code || 0,\n            message: typeof error === 'string' ? error : (error.message || error.toString()),\n            value: null\n          };\n        }).then((data) => {\n          compose('after')([options, data], () => {\n            resolve(data);\n          });\n        });\n      });\n    });\n  };\n}\n\nfunction mapRequestByOptions(options, defaults = {}) {\n  if (typeof options === \"string\") {\n    return makeRequest({\n      ...defaults,\n      url: options,\n      method: 'GET'\n    });\n  } else if (isPlainObject(options)) {\n    return makeRequest({\n      ...defaults,\n      ...options\n    });\n  } else if (Array.isArray(options)) {\n    return () => Promise.all(options.map(item => makeRequest({\n      ...defaults,\n      ...item\n    })()));\n  } else {\n    return () => Promise.reject(\"Not Support the Request Type\");\n  }\n}\n\nexport {\n  mapRequestByOptions\n};\n"],"file":"mapRequest.js"}
{"version":3,"sources":["../../src/utils/isPlainObject.js"],"names":["fnToString","fn","Function","prototype","toString","call","isPlainObject","obj","proto","constructor","Object","getPrototypeOf"],"mappings":";;;;;;;;;AAAA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,EAAD;AAAA,SAAQC,QAAQ,CAACC,SAAT,CAAmBC,QAAnB,CAA4BC,IAA5B,CAAiCJ,EAAjC,CAAR;AAAA,CAAnB;AAEA;;;;;;AAIe,SAASK,aAAT,CAAuBC,GAAvB,EAA4B;AACzC,MAAI,CAACA,GAAD,IAAQ,QAAOA,GAAP,MAAe,QAA3B,EAAqC;AACnC,WAAO,KAAP;AACD;;AAED,MAAMC,KAAK,GAAG,OAAOD,GAAG,CAACE,WAAX,KAA2B,UAA3B,GACZC,MAAM,CAACC,cAAP,CAAsBJ,GAAtB,CADY,GAEZG,MAAM,CAACP,SAFT;;AAIA,MAAIK,KAAK,KAAK,IAAd,EAAoB;AAClB,WAAO,IAAP;AACD;;AAED,MAAMC,WAAW,GAAGD,KAAK,CAACC,WAA1B;AAEA,SAAO,OAAOA,WAAP,KAAuB,UAAvB,IACFA,WAAW,YAAYA,WADrB,IAEFT,UAAU,CAACS,WAAD,CAAV,KAA4BT,UAAU,CAACU,MAAD,CAF3C;AAGD","sourcesContent":["const fnToString = (fn) => Function.prototype.toString.call(fn)\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nexport default function isPlainObject(obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false\n  }\n\n  const proto = typeof obj.constructor === 'function' ?\n    Object.getPrototypeOf(obj) :\n    Object.prototype\n\n  if (proto === null) {\n    return true\n  }\n\n  const constructor = proto.constructor\n\n  return typeof constructor === 'function'\n    && constructor instanceof constructor\n    && fnToString(constructor) === fnToString(Object)\n}\n"],"file":"isPlainObject.js"}
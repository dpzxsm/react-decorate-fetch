{"version":3,"sources":["../../src/hooks/useLazyFetches.js"],"names":["useLazyFetches","options","deps","state","forceUpdate","fetches","map","item","index","callback","current","Promise","all","then"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;AAEe,SAASA,cAAT,CAAwBC,OAAxB,EAAiCC,IAAjC,EAAuC;AACpD,MAAIC,KAAK,GAAG,mBAAO,EAAP,CAAZ;AACA,MAAMC,WAAW,GAAG,iCAApB;AACA,MAAIC,OAAO,GAAGJ,OAAO,CAACK,GAAR,CAAY,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAAA,oBACjB,2BAASD,IAAT,EAAeL,IAAf,EAAqB,KAArB,CADiB;AAAA;AAAA,QACpCC,KADoC;AAAA,QAC7BM,QAD6B;;AAEzC,WAAO;AACLN,MAAAA,KAAK,EAALA,KADK;AAELM,MAAAA,QAAQ,EAARA;AAFK,KAAP;AAID,GANa,CAAd;AAOAN,EAAAA,KAAK,CAACO,OAAN,sBAAoBL,OAAO,CAACC,GAAR,CAAY,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACJ,KAAT;AAAA,GAAhB,CAApB;AACA,wBAAU,YAAM;AACdC,IAAAA,WAAW;AACXO,IAAAA,OAAO,CAACC,GAAR,CAAYP,OAAO,CAACC,GAAR,CAAY,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACE,QAAL,EAAJ;AAAA,KAAhB,CAAZ,EAAkDI,IAAlD,CAAuD,YAAM;AAC3DT,MAAAA,WAAW;AACZ,KAFD;AAGD,GALD,EAKG,EALH;AAOA,SAAOD,KAAK,CAACO,OAAb;AACD","sourcesContent":["import { useEffect, useRef } from 'react';\nimport useFetch from \"./useFetch\";\nimport useForceUpdate from \"./useForceUpdate\";\n\nexport default function useLazyFetches(options, deps) {\n  let state = useRef([]);\n  const forceUpdate = useForceUpdate();\n  let fetches = options.map((item, index) => {\n    let [state, callback] = useFetch(item, deps, false);\n    return {\n      state,\n      callback\n    };\n  });\n  state.current = [...fetches.map(item => item.state)];\n  useEffect(() => {\n    forceUpdate();\n    Promise.all(fetches.map(item => item.callback())).then(() => {\n      forceUpdate();\n    });\n  }, []);\n\n  return state.current;\n}\n"],"file":"useLazyFetches.js"}
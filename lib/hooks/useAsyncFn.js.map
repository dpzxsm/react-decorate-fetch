{"version":3,"sources":["../../src/hooks/useAsyncFn.js"],"names":["useAsyncFn","fn","deps","initialState","loading","lastCallId","state","set","isMounted","callback","callId","current","then","value","error"],"mappings":";;;;;;;;kBAGwBA,U;;AAHxB;;AACA;;;;;;AAEe,SAASA,UAAT,CAAoBC,EAApB,EAAsE;AAAA,MAA9CC,IAA8C,uEAAvC,EAAuC;AAAA,MAAnCC,YAAmC,uEAApB,EAAEC,SAAS,KAAX,EAAoB;;AACnF,MAAMC,aAAa,mBAAO,CAAP,CAAnB;;AADmF,kBAE9D,qBAASF,YAAT,CAF8D;AAAA;AAAA,MAE5EG,KAF4E;AAAA,MAErEC,GAFqE;;AAInF,MAAMC,YAAY,gCAAlB;;AAEA,MAAMC,WAAW,wBAAY,YAAM;AACjC,QAAMC,SAAS,EAAEL,WAAWM,OAA5B;AACAJ,QAAI,EAAEH,SAAS,IAAX,EAAJ;AACA,WAAOH,KAAKW,IAAL,CACL,iBAAS;AACPJ,qBAAeE,WAAWL,WAAWM,OAArC,IAAgDJ,IAAI;AAClDM,oBADkD;AAElDT,iBAAS;AAFyC,OAAJ,CAAhD;;AAKA,aAAOS,KAAP;AACD,KARI,EASL,iBAAS;AACPL,qBAAeE,WAAWL,WAAWM,OAArC,IAAgDJ,IAAI;AAClDO,oBADkD;AAElDV,iBAAS;AAFyC,OAAJ,CAAhD;;AAKA,aAAOU,KAAP;AACD,KAhBI,CAAP;AAkBD,GArBgB,EAqBdZ,IArBc,CAAjB;;AAuBA,SAAO,CAACI,KAAD,EAAQG,QAAR,CAAP;AACD","file":"useAsyncFn.js","sourcesContent":["import { useCallback, useState, useRef } from 'react';\nimport useMountedState from './useMountedState';\n\nexport default function useAsyncFn(fn, deps = [], initialState = { loading: false }) {\n  const lastCallId = useRef(0);\n  const [state, set] = useState(initialState);\n\n  const isMounted = useMountedState();\n\n  const callback = useCallback(() => {\n    const callId = ++lastCallId.current;\n    set({ loading: true });\n    return fn().then(\n      value => {\n        isMounted() && callId === lastCallId.current && set({\n          value,\n          loading: false\n        });\n\n        return value;\n      },\n      error => {\n        isMounted() && callId === lastCallId.current && set({\n          error,\n          loading: false\n        });\n\n        return error;\n      }\n    );\n  }, deps);\n\n  return [state, callback];\n}\n"]}
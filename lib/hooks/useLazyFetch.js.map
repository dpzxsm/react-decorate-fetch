{"version":3,"sources":["../../src/hooks/useLazyFetch.js"],"names":["useLazyFetch","options","deps","state","callback","refreshInterval","then","err","timer","setInterval","cancel","clearInterval"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;AAEe,SAASA,YAAT,CAAsBC,OAAtB,EAA+BC,IAA/B,EAAqC;AAAA,kBAC1B,2BAASD,OAAT,EAAkBC,IAAlB,EAAwB,IAAxB,CAD0B;AAAA;AAAA,MAC7CC,KAD6C;AAAA,MACtCC,QADsC;;AAElD,MAAIC,eAAe,GAAGJ,OAAO,CAACI,eAAR,IAA2B,CAAjD;AACA,wBAAU,YAAM;AACdD,IAAAA,QAAQ,GAAGE,IAAX,CAAgB,UAACC,GAAD,EAAS,CACvB;AACD,KAFD;;AAGA,QAAIF,eAAJ,EAAqB;AACnB,UAAIG,KAAK,GAAGC,WAAW,CAACL,QAAD,EAAWC,eAAX,CAAvB;AACAF,MAAAA,KAAK,CAACO,MAAN,IAAgBP,KAAK,CAACO,MAAN,EAAhB;AACA,aAAO;AAAA,eAAMC,aAAa,CAACH,KAAD,CAAnB;AAAA,OAAP;AACD;AACF,GATD,EASG,CAACJ,QAAD,CATH;AAUA,SAAOD,KAAP;AACD","sourcesContent":["import { useEffect } from 'react';\nimport useFetch from './useFetch';\n\nexport default function useLazyFetch(options, deps) {\n  let [state, callback] = useFetch(options, deps, true);\n  let refreshInterval = options.refreshInterval || 0;\n  useEffect(() => {\n    callback().then((err) => {\n      //do nothing\n    });\n    if (refreshInterval) {\n      let timer = setInterval(callback, refreshInterval);\n      state.cancel && state.cancel();\n      return () => clearInterval(timer);\n    }\n  }, [callback]);\n  return state;\n}\n"],"file":"useLazyFetch.js"}
{"version":3,"sources":["../../src/hooks/useDecorateFetch.js"],"names":["makeLazyRequest","mappings","lazyRequest","Object","keys","forEach","mapRequest","propName","Function","prototype","isPrototypeOf","push","Promise","all","map","item","request","then","response","catch","error","useDecorateFetch","deps"],"mappings":";;;;;;AAAA;;AACA;;AACA;;;;AACA;;;;;;AAEA,IAAMA,kBAAkB,SAAlBA,eAAkB,CAACC,QAAD,EAAc;AACpC,MAAIC,cAAc,EAAlB;AACAC,SAAOC,IAAP,CAAYH,QAAZ,EAAsBI,OAAtB,CAA8B,oBAAY;AACxC,QAAIC,aAAaL,SAASM,QAAT,CAAjB;AACA,QAAIC,SAASC,SAAT,CAAmBC,aAAnB,CAAiCJ,UAAjC,CAAJ,EAAkD,CAEjD,CAFD,MAEO;AACL;AACAJ,kBAAYS,IAAZ,CAAiB,kCAAiBJ,QAAjB,EAA2BD,UAA3B,EAAuC,IAAvC,CAAjB;AACD;AACF,GARD;AASA,SAAO;AAAA,WAAMM,QAAQC,GAAR,CAAYX,YAAYY,GAAZ,CAAgB,gBAAQ;AAC/C,aAAOC,KAAKC,OAAL,GAAeC,IAAf,CAAoB,UAACC,QAAD,EAAc;AACvC,eAAO;AACLA,4BADK;AAELX,oBAAUQ,KAAKR;AAFV,SAAP;AAID,OALM,EAKJY,KALI,CAKE,UAACC,KAAD,EAAW;AAClB,eAAO;AACLF,oBAAUE,KADL;AAELb,oBAAUQ,KAAKR;AAFV,SAAP;AAID,OAVM,CAAP;AAWD,KAZwB,CAAZ,CAAN;AAAA,GAAP;AAaD,CAxBD;;AA0BA,IAAMc,mBAAmB,SAAnBA,gBAAmB,CAACpB,QAAD,EAAWqB,IAAX,EAAoB;AAC3C,SAAO,4BAAarB,QAAb,EAAuBqB,IAAvB,CAAP;AACD,CAFD;;kBAIeD,gB","file":"useDecorateFetch.js","sourcesContent":["import { useRef } from 'react';\nimport { mapRequestByType } from \"../utils/mapRequest\";\nimport useAsync from './useAsync';\nimport useLazyFetch from \"./useLazyFetch\";\n\nconst makeLazyRequest = (mappings) => {\n  let lazyRequest = [];\n  Object.keys(mappings).forEach(propName => {\n    let mapRequest = mappings[propName];\n    if (Function.prototype.isPrototypeOf(mapRequest)) {\n\n    } else {\n      // 添加至懒加载队列\n      lazyRequest.push(mapRequestByType(propName, mapRequest, true));\n    }\n  });\n  return () => Promise.all(lazyRequest.map(item => {\n    return item.request().then((response) => {\n      return {\n        response,\n        propName: item.propName,\n      };\n    }).catch((error) => {\n      return {\n        response: error,\n        propName: item.propName,\n      };\n    });\n  }));\n};\n\nconst useDecorateFetch = (mappings, deps) => {\n  return useLazyFetch(mappings, deps);\n};\n\nexport default useDecorateFetch;\n"]}
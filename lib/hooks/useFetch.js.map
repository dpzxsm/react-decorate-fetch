{"version":3,"sources":["../../src/hooks/useFetch.js"],"names":["LazyInitialState","status","loading","cancel","DefaultInitialState","useFetch","options","deps","lazy","request","forceUpdate","state","callback","newCallback","promise","then","data","error"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;AAEA,IAAMA,gBAAgB,GAAG;AACvBC,EAAAA,MAAM,EAAE,SADe;AAEvBC,EAAAA,OAAO,EAAE,IAFc;AAGvBC,EAAAA,MAAM,EAAE,kBAAY,CAAE;AAHC,CAAzB;AAKA,IAAMC,mBAAmB,GAAG;AAC1BH,EAAAA,MAAM,EAAE,SADkB;AAE1BC,EAAAA,OAAO,EAAE,KAFiB;AAG1BC,EAAAA,MAAM,EAAE,kBAAY,CAAE;AAHI,CAA5B;;AAMe,SAASE,QAAT,CAAkBC,OAAlB,EAA4C;AAAA,MAAjBC,IAAiB,uEAAV,EAAU;AAAA,MAANC,IAAM;AACzD,MAAIC,OAAO,GAAG,qCAAoBH,OAApB,CAAd;AACA,MAAMI,WAAW,GAAG,iCAApB;;AAFyD,oBAGjC,6BAAWD,OAAX,EAAoBF,IAApB,EAA0BC,IAAI,GAAGR,gBAAH,GAAsBI,mBAApD,CAHiC;AAAA;AAAA,MAGpDO,KAHoD;AAAA,MAG7CC,QAH6C;;AAIzD,MAAIC,WAAW,GAAG,wBAAY,YAAa;AACzC,QAAIC,OAAO,GAAGF,QAAQ,MAAR,mBAAd;AACA,KAACJ,IAAD,IAASE,WAAW,EAApB;AACA,WAAOI,OAAO,CAACC,IAAR,CAAa,UAACC,IAAD,EAAU;AAC5BN,MAAAA,WAAW;AACX,aAAOM,IAAP;AACD,KAHM,WAGE,UAACC,KAAD,EAAW;AAClBP,MAAAA,WAAW;AACX,YAAMO,KAAN;AACD,KANM,CAAP;AAOD,GAViB,EAUf,CAACL,QAAD,CAVe,CAAlB;AAWA,SAAO,CAACD,KAAD,EAAQE,WAAR,CAAP;AACD","sourcesContent":["import { useCallback } from 'react';\nimport { mapRequestByOptions } from '../utils/mapRequest';\nimport useRequest from './useRequest';\nimport useForceUpdate from './useForceUpdate';\n\nconst LazyInitialState = {\n  status: 'loading',\n  loading: true,\n  cancel: function () {}\n};\nconst DefaultInitialState = {\n  status: 'pending',\n  loading: false,\n  cancel: function () {}\n};\n\nexport default function useFetch(options, deps = [], lazy) {\n  let request = mapRequestByOptions(options);\n  const forceUpdate = useForceUpdate();\n  let [state, callback] = useRequest(request, deps, lazy ? LazyInitialState : DefaultInitialState);\n  let newCallback = useCallback((...args) => {\n    let promise = callback(...args);\n    !lazy && forceUpdate();\n    return promise.then((data) => {\n      forceUpdate();\n      return data;\n    }).catch((error) => {\n      forceUpdate();\n      throw error;\n    });\n  }, [callback]);\n  return [state, newCallback];\n}\n"],"file":"useFetch.js"}